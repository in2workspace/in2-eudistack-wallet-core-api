plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'jacoco'
	id 'checkstyle'
	id 'org.owasp.dependencycheck' version '9.1.0'
}

group = 'es.in2'
version = '1.2.0'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = '0.8.9'
}

checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyleMain {
	source ='src/main/java'
}

checkstyleTest {
	source ='src/test/java'
}

sonar {
	properties {
		property 'sonar.projectName', 'Wallet Server'
		property 'sonar.projectKey', 'in2workspace_wallet-server'
		property 'sonar.organization', 'in2workspace'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.coverage.exclusions',
				"src/main/java/es/in2/wallet/WalletApiApplication.java"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {

	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// CBOR Dependencies
	implementation 'com.upokecenter:cbor:4.5.2'
	implementation 'io.github.ehn-digital-green-development:base45:0.0.3'
	implementation 'com.augustcellars.cose:cose-java:1.1.0'
	implementation 'org.apache.commons:commons-compress:1.26.1'

	// JSON
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
	implementation 'org.json:json:20231013'

	// Resilience
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:3.1.1'

	// Key Vault
	testImplementation 'org.springframework.data:spring-data-keyvalue:3.2.3'
	implementation 'org.springframework.vault:spring-vault-core:3.1.1'

	// Bounty Castle
	implementation 'org.bouncycastle:bcprov-jdk18on:1.78'
	implementation 'com.github.multiformats:java-multibase:v1.1.1'
	implementation 'com.github.sthagen:erdtman-java-json-canonicalization:v1.1'

	// Azure
	implementation 'com.azure.spring:spring-cloud-azure-starter-appconfiguration:6.0.0-beta.4'
	implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault-secrets:6.0.0-beta.4'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

	// Logging
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

	// Monitoring
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Metrics
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Unit Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.projectreactor:reactor-test'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:vault'
	testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.13'
}

tasks.named('compileJava') {
	inputs.files(tasks.named('processResources'))
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestReport {
	dependsOn(tasks.test)
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.outputLocation.set(layout.buildDirectory.dir('jacocoHtml'))
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"src/main/java/es/in2/wallet/WalletApiApplication.java"
			])
		}))
	}
}

tasks.register('printVersion') {
	doLast {
		println version
	}
}

tasks.register('printProjectName') {
	doLast {
		println rootProject.name
	}
}
