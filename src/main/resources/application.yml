spring:
  application:
    # Defines the name of the application
    name: "wallet-server"
  main:
    # Specifies that this is a reactive application (Spring WebFlux)
    web-application-type: reactive
  r2dbc:
    # The database connection URL for R2DBC (REQUIRED - CONFIGMAP)
    url: "r2dbc:postgresql://localhost:5434/wallet?schema=wallet"
    # The database username for R2DBC connections (REQUIRED)
    username: "postgres"
    # The database password for R2DBC connections (REQUIRED - SECRET)
    password: "postgres"
  flyway:
    # The JDBC URL used by Flyway for database schema migrations (REQUIRED - CONFIGMAP)
    url: "jdbc:postgresql://localhost:5434/wallet?schema=wallet"
    # Defines the path where Flyway should look for SQL migration scripts (LEAVE HERE? not in Helm)
    locations: classpath:db/migration
    # The database username used by Flyway to execute migrations (REQUIRED - SECRET)
    user: "postgres"
    # The database password used by Flyway to execute migrations (REQUIRED - SECRET)
    password: "postgres"
    # Specifies the default schema in which Flyway should apply migrations ( ES DEIXA AQUÍ, NO A HELM NI CONSTANT)
    default-schema: wallet


logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    # Sets logging level for the custom package "es.in2.wallet"
    es.in2.wallet: INFO

# health, info, tracing have been removed
management:
  endpoints:
    # Disables all management endpoints by default
    enabled-by-default: false
    web:
      exposure:
        # Specifies the enabled management endpoints
        include: health, prometheus
      # Sets the base path for management endpoints
      base-path: /
      path-mapping:
        # Maps the health endpoint to /health
        health: health
        # Maps the Prometheus metrics endpoint to /prometheus
        prometheus: prometheus
  endpoint:
    health:
      # Enables the health endpoint
      enabled: true
      # Always show detailed health information
      show-details: always
      vault:
        enabled: false
    prometheus:
      enabled: true

springdoc:
  api-docs:
    # Defines the endpoint for OpenAPI documentation
    path: /api-docs
  swagger-ui:
    # Defines the path to access Swagger UI
    path: /swagger-ui.html
    # Sorts tags alphabetically in the Swagger UI
    tags-sorter: alpha
    # Sorts API operations by HTTP method (GET, POST, etc.)
    operations-sorter: method


server:
  # Defines the port on which the application will run
  port: 8082

#Els que venen a partir d'aquí, agrupar com a "wallet"

wallet:
  config-source:
    #currently can be yaml or azure
    name: yaml

vault:
  provider:
  # currently can be hashicorp or azure
    name: hashicorp

hashicorp:
  vault:
    # constant? Not in Helm
    path: /kv
    # REQUIRED
    host:
    # REQUIRED
    port:
    # REQUIRED
    scheme:
    # REQUIRED
    token:

# Not configured in Helm
azure:
  app:
    endpoint: ${APP_CONFIG_ENDPOINT}
    label:
      global: service-discovery
  key-vault:
    endpoint: "your-endpoint"

# These properties will be removed in the future
auth-server:
  external-url:
#    CONSTANT
#    scheme: "http"
#    REQUIRED, CONFIGMAP
    domain:
#    CONSTANT
#    port: "7002"
#    REQUIRED
    path:
  internal-url:
    #    CONSTANT
#    scheme: "http"
    #    CONSTANT
#    domain: "localhost"
    #    CONSTANT
#    port: "7002"
    path:
# NOT IN HELM: CONSTANTS?
  token-url:
    scheme: "http"
    domain: "localhost"
    port: "8080"
    path: "/realms/EAAProvider/verifiable-credential/did:key:z6MkqmaCT2JqdUtLeKah7tEVfNXtDXtQyj4yxEgV11Y5CqUa/token"
#    CONSTANT
#  jwt-decoder-path: "/protocol/openid-connect/certs"

# CONSTANT - NO HI ÉS A HELM
#verifiable-presentation:
#  expiration-time: 3
#  expiration-unit: MINUTES #DAYS HOURS MINUTES SECONDS

# These properties are used to pass the EBSI Holder Wallet Test
ebsi:
  test:
    # (REQUIRED - CONFIGMAP)
    url:
    # (REQUIRED - SECRET)
    client-secret:
    # (REQUIRED)
    client-id:
    # (REQUIRED)
    username:
    # (REQUIRED - SECRET)
    password:

# used to be configured in each application-*.yaml, now will come from Helm
# (OPTIONAL)
cors:
  allowedOrigins:
