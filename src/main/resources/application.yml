spring:
  application:
    # Defines the name of the application (Not in Helm)
    name: "wallet-server"
  main:
    # Specifies that this is a reactive application (Spring WebFlux) (Not in Helm)
    web-application-type: reactive
  r2dbc:
    # The database connection URL for R2DBC (REQUIRED)
    url: "r2dbc:postgresql://localhost:5434/wallet?schema=wallet"
    # The database username for R2DBC connections (REQUIRED)
    username: "postgres"
    # The database password for R2DBC connections (REQUIRED)
    password: "postgres"
  flyway:
    # The JDBC URL used by Flyway for database schema migrations (REQUIRED)
    url: "jdbc:postgresql://localhost:5434/wallet?schema=wallet"
    # Defines the path where Flyway should look for SQL migration scripts (Not in Helm)
    locations: classpath:db/migration
    # The database username used by Flyway to execute migrations (REQUIRED)
    user: "postgres"
    # The database password used by Flyway to execute migrations (REQUIRED)
    password: "postgres"
    # Specifies the default schema in which Flyway should apply migrations (Not in Helm)
    default-schema: wallet
  zipkin:
    enabled: false

logging:
  pattern:
    # (Not in Helm)
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    # Sets logging level for the custom package "es.in2.wallet" (OPTIONAL)
    es.in2.wallet: INFO

# he tret health, info, tracing tal com vam fer a verifier
# (Not in Helm)
management:
#  todo
  tracing:
    enabled: false
  endpoints:
    # Disables all management endpoints by default
    enabled-by-default: false
    web:
      exposure:
        # Specifies the enabled management endpoints
        include: health, prometheus
      # Sets the base path for management endpoints
      base-path: /
      path-mapping:
        # Maps the health endpoint to /health
        health: health
        # Maps the Prometheus metrics endpoint to /prometheus
        prometheus: prometheus
  endpoint:
    health:
      # Enables the health endpoint
      enabled: true
      # Always show detailed health information
      show-details: always
      vault:
        enabled: false
    prometheus:
      enabled: true

# Not in Helm
springdoc:
  api-docs:
    # Defines the endpoint for OpenAPI documentation
    path: /api-docs
  swagger-ui:
    # Defines the path to access Swagger UI
    path: /swagger-ui.html
    # Sorts tags alphabetically in the Swagger UI
    tags-sorter: alpha
    # Sorts API operations by HTTP method (GET, POST, etc.)
    operations-sorter: method

# SHOULD BE ADDED TO HELM: used to be configured in each application-*.yaml
server:
  # Defines the port on which the application will run
  port: 8080

app:
  config-source:
    #currently can be yaml or azure (Not in Helm)
    name: yaml

# nou agrupament, SHOULD BE CHANGED IN HELM
security:
  auth-server:
    external-url:
      #  (REQUIRED)
      domain:
      #  (REQUIRED)
      path:
    internal-url:
      #  (REQUIRED)  --de moment es deixa hardcoded a Helm "keycloak-proxy"
      domain:
      #  (REQUIRED)
      path:
  cors:
    # used to be configured in each application-*.yaml, SHOULD BE ADDED TO HELM (OPTIONAL)
    allowedOrigins:
  vault:
    provider:
      name: hashicorp
    hashicorp:
      # (REQUIRED)
      host:
      # (REQUIRED)
      port:
      # (REQUIRED)
      scheme:
      # (REQUIRED)
      token:
    azure:
      # (Not in Helm)
      endpoint: "your-endpoint"

# Not in Helm
azure:
  app:
    endpoint: ${APP_CONFIG_ENDPOINT}
    label:
      global: service-discovery

# These properties are used to pass the EBSI Holder Wallet Test
ebsi:
  test:
    # (not in Helm)
    #  todo
    url: "https://keycloak-dev.ssihub.org/realms/in2-wallet/protocol/openid-connect/token"
    # (not in Helm)
    # todo
    client-secret: "EbPcmBG16U8SGQ82UeL0weQOVGKYCToa"
    # (not in Helm)
    client-id: "user-registry-client"
    # (not in Helm)
    username: "defaultusser"
    # (not in Helm)
    # todo
    password: "defaultPassword"

